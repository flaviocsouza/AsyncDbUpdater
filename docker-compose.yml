version: "3.4"
services:
  ###Projects###
  async-db-updater-api:
    container_name: async-db-updater-api
    build:
      context: ./
      dockerfile: ./AsyncDbUpdaterApi/Dockerfile
    networks: 
      - kafka-network
    environment:
      BOOTSTRAP_SERVERS: kafka-broker:9092
    depends_on:
      - kafka-broker
    ports:
      - 5000:8080
      - 443:443

  async-db-updater-sql:
    container_name: async-db-updater-sql
    build:
      context: ./
      dockerfile: ./AsyncDbUpdaterSql/Dockerfile
    depends_on:
      - kafka-broker
    ports:
      - 6000:8080
      - 44365:443

  ###Kafka###


  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - 2181:2181
    hostname: zookeeper
    networks: 
      - kafka-network
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka-broker:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-broker
    networks: 
      - kafka-network
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-broker:29092,PLAINTEXT_HOST://kafka-broker:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    networks: 
      - kafka-network
    depends_on:
      - kafka-broker
    ports:
      - 19000:9000
    environment:
      KAFKA_BROKERCONNECT: kafka-broker:29092

networks: 
  kafka-network:
    name: kafka-network
    driver: bridge  